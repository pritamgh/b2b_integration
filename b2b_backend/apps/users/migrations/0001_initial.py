# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-06-12 19:58
from __future__ import unicode_literals

import apps.users.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'A user with this email already exists.'}, help_text='Email is used as internal username', max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(blank=True, help_text='Display username', max_length=255, verbose_name='Username')),
                ('avatar', imagekit.models.fields.ProcessedImageField(editable=False, null=True, upload_to=apps.users.models.upload_user_media_to)),
                ('contact', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone should in the format:'+999999999'.Upto 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Contact')),
                ('user_role', models.CharField(max_length=100, null=True, verbose_name='Role of User')),
                ('status', models.CharField(help_text='Any User is Blocked/Unblocked by Buyer', max_length=100, null=True, verbose_name='User Status')),
                ('warehouse_exchange_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID of Warehouse Exchange')),
                ('last_login', models.DateTimeField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'CustomUser',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', apps.users.models.CustomUserManager()),
            ],
        ),
    ]
